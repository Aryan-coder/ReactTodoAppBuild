{"version":3,"sources":["firebaseConfig.js","components/Sign.js","components/Todo.js","App.js","reportWebVitals.js","reducer.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Sign","useState","alreadyRegistered","setRegistered","authenticated","setAuthenticated","dispatch","useDispatch","to","onSubmit","e","preventDefault","auth","signInWithEmailAndPassword","target","email","value","password","then","responce","firestore","doc","user","uid","get","resp","exists","type","data","console","log","catch","err","signInHandler","placeholder","name","onClick","createUserWithEmailAndPassword","set","todos","signUpHandler","Todo","useSelector","state","setTodos","inputValue","useRef","useEffect","updateTodosInServer","response","className","ref","placholder","id","length","task","current","map","todo","filter","removeTodo","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","action","ReactDOM","render","StrictMode","store","createStore","document","getElementById"],"mappings":"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","file":"static/js/main.339a04ad.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDHqH4U2S4ahiz1leEfai4zbKNfX-nb-MM\",\r\n    authDomain: \"todoapp-cf4be.firebaseapp.com\",\r\n    projectId: \"todoapp-cf4be\",\r\n    storageBucket: \"todoapp-cf4be.appspot.com\",\r\n    messagingSenderId: \"715509723864\",\r\n    appId: \"1:715509723864:web:15cfc3616c05f58a28ddad\",\r\n    measurementId: \"G-L54KHP7EM5\"\r\n  };\r\n  \r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase","import {useState, useRef} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport firebase from '../firebaseConfig.js'\r\nimport {useDispatch} from 'react-redux'\r\nimport './styles/Sign.css'\r\n\r\nconst Sign=()=>{\r\n\r\n    const [alreadyRegistered, setRegistered] = useState(true)\r\n    const [authenticated, setAuthenticated] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    const signUpHandler=(e)=>{\r\n        e.preventDefault()\r\n        firebase.auth().createUserWithEmailAndPassword(e.target.email.value, e.target.email.value)\r\n        .then(responce=>{\r\n            console.log('auth')\r\n            console.log(responce)\r\n            firebase.firestore().doc('/users/'+responce.user.uid).set({\r\n                name: e.target.name.value,\r\n                todos: []\r\n            }).then(resp=>{\r\n                console.log('data')\r\n                console.log(resp)\r\n                setRegistered(true)\r\n            }).catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const signInHandler=(e)=>{\r\n        e.preventDefault()\r\n        firebase.auth().signInWithEmailAndPassword(e.target.email.value,e.target.password.value)\r\n        .then(responce=>{\r\n            firebase.firestore().doc('/users/'+responce.user.uid).get().then(resp=>{\r\n                if(resp.exists){\r\n                    dispatch({type: 'SET', user: resp.data()})\r\n                    setAuthenticated(true)\r\n                }\r\n                else{\r\n                    console.log('Data not found')\r\n                }\r\n            }).catch(err=>{\r\n                console.log(err)\r\n            })\r\n        })\r\n    }\r\n\r\n    const signIn=()=>{\r\n\r\n        return(<div>\r\n            <form onSubmit={(e)=>signInHandler(e)}>\r\n                <h2>Sign in</h2>\r\n                <input type='email' placeholder='email' name='email' />\r\n                <input type='password' placeholder='password' name='password' />\r\n                <button type='submit'>Submit</button>\r\n                <h4>Don't have account ? <span onClick={()=>setRegistered(false)} >click here</span> to create one.</h4>\r\n            </form>\r\n        </div>)\r\n    }\r\n\r\n    const  signUp=()=>{\r\n        return(<div>\r\n            <form onSubmit={(e)=>signUpHandler(e)}>\r\n                <h2>Sign up</h2>\r\n                <input type='name' placeholder='username' name='name' />\r\n                <input type='email' placeholder='email' name='email' />\r\n                <input type='password' placeholder='password' name='password' />\r\n                <button type='submit'>Submit</button>\r\n                <h4>Already have account ? <span onClick={()=>setRegistered(true)} >click here</span> to Login.</h4>\r\n            </form>\r\n        </div>)\r\n    }\r\n\r\n    if(authenticated){\r\n        return(<Redirect to='/todo' />)\r\n    }\r\n\r\n    return(<div>\r\n        {alreadyRegistered ? signIn() : signUp()}    \r\n    </div>)\r\n\r\n}\r\n\r\nexport default Sign","import {useSelector} from 'react-redux'\r\nimport {useState, useEffect, useRef} from 'react'\r\nimport firebase from '../firebaseConfig'\r\nimport './styles/Todo.css'\r\n\r\nconst Todo=()=>{\r\n\r\n    const user = useSelector((state)=>state.user)\r\n    const [todos, setTodos] = useState(user.todos)\r\n    const inputValue = useRef() \r\n\r\n    useEffect(()=>{\r\n       updateTodosInServer()\r\n    },[todos])\r\n\r\n    const addTodo=()=>{\r\n\r\n        setTodos([\r\n            ...todos,\r\n            {\r\n                id: todos.length+1,\r\n                task: inputValue.current.value\r\n            }\r\n        ])\r\n    }\r\n\r\n    const removeTodo=(e)=>{\r\n        setTodos(todos.filter(todo=>todo.id!=e.target.id))\r\n    }\r\n\r\n    const updateTodosInServer=()=>{\r\n        firebase.firestore().doc('/users/'+user.uid).set({\r\n            name: user.name,\r\n            todos: todos\r\n        }).then(response=>{\r\n            console.log('updated')\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const renderTodos=()=>todos.map(todo=><li key={todo.id} id={todo.id} onClick={e=>removeTodo(e)} >{todo.task}</li>)\r\n\r\n    return(<div className='container'>\r\n        <h2>TodoApp</h2>\r\n        <div className='input-area'>\r\n            <input type='text' ref={inputValue} placholder='enter task' name='task'></input>\r\n            <i className='fa fa-plus'  onClick={addTodo} ></i>\r\n            </div> \r\n            <ul>{renderTodos()}</ul>\r\n    </div>)\r\n\r\n}\r\n\r\nexport default Todo","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Sign from './components/Sign'\nimport Todo from './components/Todo'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path='/' exact ><Sign/></Route>\n          <Route path='/todo' exact><Todo/></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","var initState={\r\n    user: {\r\n        uid: '',\r\n        name: '',\r\n        todos: []\r\n    }\r\n}\r\n\r\nfunction reducer(state=initState, action){\r\n\r\n    switch(action.type){\r\n        case 'SET': {\r\n            return({user: action.user})\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from 'redux'\nimport {Provider, provider} from 'react-redux'\nimport reducer from './reducer'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={createStore(reducer)}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}